#!/usr/bin/env perl

use strict;
use warnings;

use Path::Class;

my %PROFILE = (
  mp4 => sub {
    my ( $in, $out ) = @_;
    return mp4( $in, $out );
  },
);

die "usage: ffatomic <profile> <in> <out>\n"
 unless @ARGV == 3;

my ( $profile, $in, $out ) = @ARGV;

my $pf = $PROFILE{$profile} || die "Unknown profile: $profile\n";

my $tmp = tmp_name( $out );

my @cmd = $pf->( $in, $tmp );

file( $out )->parent->mkpath;
file( $tmp )->parent->mkpath;

system @cmd and die join( ' ', @cmd ), " failed: $?\n";
unlink "$out";
rename "$tmp", "$out"
 or die "Can't rename $tmp as $out: $!\n";

sub mp4 {
  my ( $in, $out ) = @_;
  return (
    'ffmpeg', '-y',
    -i       => "$in",
    -map     => '0:0',
    -map     => '0:1',
    -acodec  => 'libfaac',
    '-b:a'   => '128k',
    '-r:a'   => 44100,
    -vcodec  => 'libx264',
    -bf      => 0,
    '-b:v'   => '2800k',
    '-r:v'   => 25,
    -threads => 0,
    "$out",
  );
}

sub tmp_name {
  my $out  = file( shift );
  my $outd = $out->absolute->parent;
  my $tmpd = dir( "$outd.tmp" );
  return file( $tmpd, $out->basename );
}

# vim:ts=2:sw=2:sts=2:et:ft=perl

