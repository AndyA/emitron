TODO:
  Make event, queue and model (and other things) available globally

    All are fork-safe so it doesn't matter if we share single instances
    or have local instances.

    But if we have local instances we at least need config to point to
    the databases.

    And, of course, config is in the model - giving us a bootstrap
    problem...

    Maybe switch to Moose?

  Implement some basic verbs in Emitron::Core

    encode_start
    encode_stop
    package_start
    package_stop

  Get Wirecast talking to crtmpserver

  Implement the concept of an event as a the root entity for a bundle
  of streams

  What constitutes an event?
    stream sources
    slates / preroll etc
    profiles?

  More verbs in Emitron::Core
    Stream switching
      Slate / preroll / multiple sources

  VOD capture?
    Logging?

  Make webapp run under Apache.

  SSL for web app.

  Authentication / authorisation
    How do we handle that for incoming RTMP?

Notes:

  Any config that we push to crtmpserver should be idempotent so we can
  always push config at startup / as often as we like.


